Backport of:

From 6983e59b727458a6c64d9659c85f08218bc4fcda Mon Sep 17 00:00:00 2001
From: Mark Wielaard <mark@klomp.org>
Date: Sat, 18 Aug 2018 19:51:27 +0200
Subject: [PATCH] libdw: Check end of attributes list consistently.

dwarf_child (__libdw_find_attr), dwarf_getabbrevattr[_data] and
dwarf_getattrs all assume the end of the attribute list is when
both the name (code) and form of the attribute are zero.

dwarf_getabbrev (__libdw_getabbrev) and dwarf_hasattr assume the
end of the attribute list is when either the name (code) or the
form of the attribute is zero.

The DWARF spec says: "The series of attribute specifications ends
with an entry containing 0 for the name and 0 for the form." So
the first check is correct.

Make sure dwarf_getabbrev and dwarf_hasattr use the same check.
This is important since all other functions expect dwarf_getabbrev
(__libdw_getabbrev) to have done a data sanity check of the attribute.
So if the ending condition is different it could cause a crash.

https://sourceware.org/bugzilla/show_bug.cgi?id=23529

Signed-off-by: Mark Wielaard <mark@klomp.org>
---
 libdw/ChangeLog         | 7 +++++++
 libdw/dwarf_getabbrev.c | 2 +-
 libdw/dwarf_hasattr.c   | 4 ++--
 3 files changed, 10 insertions(+), 3 deletions(-)

#diff --git a/libdw/ChangeLog b/libdw/ChangeLog
#index 472d922..7cb2592 100644
#--- a/libdw/ChangeLog
#+++ b/libdw/ChangeLog
#@@ -1,5 +1,12 @@
# 2018-08-18  Mark Wielaard  <mark@klomp.org>
# 
#+	* dwarf_getabbrev.c (__libdw_getabbrev): Continue until both name
#+	and form are zero.
#+	* dwarf_hasattr.c (dwarf_hasattr): Stop when both name and form
#+	are zero.
#+
#+2018-08-18  Mark Wielaard  <mark@klomp.org>
#+
# 	* dwarf_getaranges.c (dwarf_getaranges.c): Make sure there is enough
# 	data to read the address and segment size.
# 
Index: elfutils-0.170/libdw/dwarf_getabbrev.c
===================================================================
--- elfutils-0.170.orig/libdw/dwarf_getabbrev.c	2019-06-07 11:22:21.577027172 -0400
+++ elfutils-0.170/libdw/dwarf_getabbrev.c	2019-06-07 11:23:15.497217080 -0400
@@ -134,7 +134,7 @@ __libdw_getabbrev (Dwarf *dbg, struct Dw
 	goto invalid;
       get_uleb128 (attrform, abbrevp, end);
     }
-  while (attrname != 0 && attrform != 0 && ++abb->attrcnt);
+  while ((attrname != 0 || attrform != 0) && ++abb->attrcnt);
 
   /* Return the length to the caller if she asked for it.  */
   if (lengthp != NULL)
Index: elfutils-0.170/libdw/dwarf_hasattr.c
===================================================================
--- elfutils-0.170.orig/libdw/dwarf_hasattr.c	2019-06-07 11:22:21.577027172 -0400
+++ elfutils-0.170/libdw/dwarf_hasattr.c	2019-06-07 11:22:21.577027172 -0400
@@ -72,8 +72,8 @@ dwarf_hasattr (Dwarf_Die *die, unsigned
 	goto invalid_dwarf;
       get_uleb128 (attr_form, attrp, endp);
 
-      /* We can stop if we found the attribute with value zero.  */
-      if (attr_name == 0 || attr_form == 0)
+      /* We can stop if we found the end of the attribute list.  */
+      if (attr_name == 0 && attr_form == 0)
 	return 0;
 
       if (attr_name == search_name)
