Backport of:

From 2562759d6fe5b364fe224852e64e8bda39eb2e35 Mon Sep 17 00:00:00 2001
From: Mark Wielaard <mark@klomp.org>
Date: Sun, 20 Jan 2019 22:10:18 +0100
Subject: [PATCH] libdw: Check terminating NUL byte in dwarf_getsrclines for
 dir/file table.

For DWARF version < 5 the .debug_line directory and file tables consist
of a terminating NUL byte after all strings. The code used to just skip
this without checking it actually existed. This could case a spurious
read past the end of data.

Fix the same issue in readelf.

https://sourceware.org/bugzilla/show_bug.cgi?id=24102

Signed-off-by: Mark Wielaard <mark@klomp.org>
---
 libdw/ChangeLog           |  5 +++++
 libdw/dwarf_getsrclines.c | 11 ++++++++---
 src/ChangeLog             |  5 +++++
 src/readelf.c             |  8 ++++++--
 4 files changed, 24 insertions(+), 5 deletions(-)

#diff --git a/libdw/ChangeLog b/libdw/ChangeLog
#index 44405d7..ff3880d 100644
#--- a/libdw/ChangeLog
#+++ b/libdw/ChangeLog
#@@ -1,3 +1,8 @@
#+2019-01-20  Mark Wielaard  <mark@klomp.org>
#+
#+	* dwarf_getsrclines.c (read_srclines): Check terminating NUL byte
#+	for dir and file lists.
#+
# 2018-10-23  Mark Wielaard  <mark@klomp.org>
# 
# 	* dwarf_child.c (__libdw_find_attr): Initialize readp to NULL.
Index: elfutils-0.170/libdw/dwarf_getsrclines.c
===================================================================
--- elfutils-0.170.orig/libdw/dwarf_getsrclines.c	2019-06-07 10:48:51.214165843 -0400
+++ elfutils-0.170/libdw/dwarf_getsrclines.c	2019-06-07 10:50:12.970483757 -0400
@@ -289,7 +289,7 @@ read_srclines (Dwarf *dbg,
   /* First count the entries.  */
   const unsigned char *dirp = linep;
   unsigned int ndirs = 0;
-  while (*dirp != 0)
+  while (dirp < lineendp && *dirp != 0)
     {
       uint8_t *endp = memchr (dirp, '\0', lineendp - dirp);
       if (endp == NULL)
@@ -297,6 +297,8 @@ read_srclines (Dwarf *dbg,
       ++ndirs;
       dirp = endp + 1;
     }
+  if (dirp >= lineendp || *dirp != '\0')
+    goto invalid_data;
   ndirlist += ndirs;
 
   /* Arrange the list in array form.  */
@@ -341,7 +343,7 @@ read_srclines (Dwarf *dbg,
 
   if (unlikely (linep >= lineendp))
     goto invalid_data;
-  while (*linep != 0)
+  while (linep < lineendp && *linep != '\0')
     {
       struct filelist *new_file = NEW_FILE ();
 
@@ -398,6 +400,8 @@ read_srclines (Dwarf *dbg,
 	goto invalid_data;
       get_uleb128 (new_file->info.length, linep, lineendp);
     }
+  if (linep >= lineendp || *linep != '\0')
+    goto invalid_data;
   /* Skip the final NUL byte.  */
   ++linep;
 
Index: elfutils-0.170/src/readelf.c
===================================================================
--- elfutils-0.170.orig/src/readelf.c	2019-06-07 10:48:51.214165843 -0400
+++ elfutils-0.170/src/readelf.c	2019-06-07 10:51:34.662801364 -0400
@@ -6698,7 +6698,7 @@ print_debug_line_section (Dwfl_Module *d
 	goto invalid_unit;
 
       puts (gettext ("\nDirectory table:"));
-      while (*linep != 0)
+      while (linep < lineendp && *linep != 0)
 	{
 	  unsigned char *endp = memchr (linep, '\0', lineendp - linep);
 	  if (unlikely (endp == NULL))
@@ -6708,6 +6708,8 @@ print_debug_line_section (Dwfl_Module *d
 
 	  linep = endp + 1;
 	}
+      if (linep >= lineendp || *linep != 0)
+	goto invalid_unit;
       /* Skip the final NUL byte.  */
       ++linep;
 
@@ -6715,7 +6717,7 @@ print_debug_line_section (Dwfl_Module *d
 	goto invalid_unit;
       puts (gettext ("\nFile name table:\n"
 		     " Entry Dir   Time      Size      Name"));
-      for (unsigned int cnt = 1; *linep != 0; ++cnt)
+      for (unsigned int cnt = 1; linep < lineendp && *linep != 0; ++cnt)
 	{
 	  /* First comes the file name.  */
 	  char *fname = (char *) linep;
@@ -6745,6 +6747,8 @@ print_debug_line_section (Dwfl_Module *d
 	  printf (" %-5u %-5u %-9u %-9u %s\n",
 		  cnt, diridx, mtime, fsize, fname);
 	}
+      if (linep >= lineendp || *linep != '\0')
+	goto invalid_unit;
       /* Skip the final NUL byte.  */
       ++linep;
 
